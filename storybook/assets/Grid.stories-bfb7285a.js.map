{"version":3,"file":"Grid.stories-bfb7285a.js","sources":["../../src/Grid/Grid.tsx"],"sourcesContent":["import { root, vars } from \"./Grid.css\";\nimport { assignInlineVars } from \"@vanilla-extract/dynamic\";\nimport asCssLength from \"../asCssLength\";\nimport { PropsWithHTMLElement } from \"../types\";\n\nexport type GridProps<TElementType extends React.ElementType> =\n  PropsWithHTMLElement<\n    {\n      rows?: number | string;\n      columns?: number | string;\n      gap?: number | string;\n    },\n    TElementType\n  >;\n\nconst Grid = <TElementType extends React.ElementType = 'div'>(props: GridProps<TElementType>) => {\n  const { as: Element = 'div', rows, columns, gap, ...divProps } = props;\n\n  return (\n    <Element\n      {...divProps}\n      className={root}\n      style={{\n        ...divProps.style,\n        ...assignInlineVars({\n          [vars.rows]: String((typeof rows === 'number' && `repeat(${rows}, 1fr)`) || \"initial\"),\n          [vars.columns]: String((typeof columns === 'number' && `repeat(${columns}, 1fr)`) || \"initial\"),\n          [vars.gap]: asCssLength(gap ?? \"initial\"),\n        }),\n      }}\n    />\n  );\n};\n\nexport default Grid;\n"],"names":["Grid","props","Element","rows","columns","gap","divProps","jsx","root","assignInlineVars","vars","asCssLength"],"mappings":"kRAeA,MAAAA,EAAAC,GAAA,CACE,KAAA,CAAA,GAAAC,EAAA,MAAA,KAAAC,EAAA,QAAAC,EAAA,IAAAC,EAAA,GAAAC,CAAA,EAAAL,EAEA,OAAAM,EAAA,IACEL,EAAC,CAAA,GAAAI,EACK,UAAAE,EACO,MAAA,CACJ,GAAAF,EAAA,MACO,GAAAG,EAAA,CACQ,CAAAC,EAAA,IAAA,EAAA,OAAA,OAAAP,GAAA,UAAA,UAAAA,CAAA,UAAA,SAAA,EACmE,CAAAO,EAAA,OAAA,EAAA,OAAA,OAAAN,GAAA,UAAA,UAAAA,CAAA,UAAA,SAAA,EACS,CAAAM,EAAA,GAAA,EAAAC,EAAAN,GAAA,SAAA,CACtD,CAAA,CACzC,CACH,CAAA,CAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}