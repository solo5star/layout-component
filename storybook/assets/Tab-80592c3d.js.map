{"version":3,"file":"Tab-80592c3d.js","sources":["../../src/Tabs/TabButton.tsx","../../src/Tabs/Tabs.tsx","../../src/Tabs/Tab.tsx"],"sourcesContent":["import { PropsWithHTMLElement } from \"../types\";\nimport { active, root } from \"./TabButton.css\";\n\nexport type TabButtonProps<TElementType extends React.ElementType> =\n  PropsWithHTMLElement<\n    {\n      startIcon?: React.ReactNode;\n      active?: boolean;\n    },\n    TElementType\n  >;\n\nconst TabButton = <TElementType extends React.ElementType = \"button\">(\n  props: TabButtonProps<TElementType>\n) => {\n  const {\n    as: Element = \"button\",\n    startIcon,\n    active: isActive,\n    children,\n    ...restProps\n  } = props;\n\n  return (\n    <Element {...restProps} className={[isActive && active, root].join(\" \")}>\n      {startIcon}\n      {children}\n    </Element>\n  );\n};\n\nexport default TabButton;\n","import { assignInlineVars } from \"@vanilla-extract/dynamic\";\nimport { PropsWithHTMLElement } from \"../types\";\nimport {\n  root,\n  tabButtons,\n  vars,\n} from \"./Tabs.css\";\nimport React, {\n  PropsWithChildren,\n  ReactNode,\n  cloneElement,\n  useState,\n} from \"react\";\nimport TabButton from \"./TabButton\";\n\nfunction resolveChildren(children: PropsWithChildren[\"children\"]) {\n  return children &&\n    typeof children === \"object\" &&\n    \"type\" in children &&\n    children.type === React.Fragment\n    ? children.props.children\n    : children;\n}\n\nexport type TabsProps<TElementType extends React.ElementType> =\n  PropsWithHTMLElement<\n    {\n      wrap?: boolean;\n    },\n    TElementType\n  >;\n\nconst Tabs = <TElementType extends React.ElementType = \"div\">(\n  props: TabsProps<TElementType>\n) => {\n  const {\n    as: Element = \"div\",\n    wrap,\n    children,\n    ...restProps\n  } = props;\n\n  const [focusedTab, setFocusedTab] = useState<number>(0);\n  const resolvedChildren = React.Children.toArray(resolveChildren(children));\n\n  const activeTab = resolvedChildren[focusedTab];\n  const buttons = resolvedChildren\n    .map(\n      (child) =>\n        typeof child === \"object\" &&\n        \"props\" in child &&\n        \"button\" in child.props &&\n        child.props.button\n    )\n    .filter((button): button is ReactNode => !!button)\n    .map((button) =>\n      typeof button === \"string\" ? <TabButton>{button}</TabButton> : button\n    );\n\n  return (\n    <Element\n      {...restProps}\n      className={root}\n      style={{\n        ...restProps.style,\n        ...assignInlineVars({\n          [vars.flexWrap]: wrap ? 'wrap' : 'initial',\n        }),\n      }}\n    >\n      <ul className={tabButtons}>\n        {buttons.map((button, index) => (\n          <li key={index} onClick={() => setFocusedTab(index)}>\n            {button && typeof button === \"object\" && \"props\" in button\n              ? cloneElement(button, { active: focusedTab === index })\n              : button}\n          </li>\n        ))}\n      </ul>\n      <div>{activeTab}</div>\n    </Element>\n  );\n};\n\nexport default Tabs;\n","import { PropsWithHTMLElement } from \"../types\";\n\nexport type TabProps<TElementType extends React.ElementType> =\n  PropsWithHTMLElement<\n    {\n      button?: React.ReactNode | string;\n    },\n    TElementType\n  >;\n\nconst Tab = <TElementType extends React.ElementType = \"div\">(\n  props: TabProps<TElementType>\n) => {\n  const { as: Element = \"div\", button, ...restProps } = props;\n\n  return <Element {...restProps} />;\n};\n\nexport default Tab;\n"],"names":["TabButton","props","Element","startIcon","isActive","children","restProps","jsxs","active","root","resolveChildren","React","Tabs","wrap","focusedTab","setFocusedTab","useState","resolvedChildren","activeTab","buttons","child","button","jsx","assignInlineVars","vars","tabButtons","index","cloneElement","Tab"],"mappings":"0MAYA,MAAAA,EAAAC,GAAA,CAGE,KAAA,CAAM,GAAAC,EAAA,SACU,UAAAC,EACd,OAAAC,EACQ,SAAAC,EACR,GAAAC,CACG,EAAAL,EAGL,OAAAM,EAAA,KAAAL,EAAA,CAAA,GAAAI,EAAA,UAAA,CAAAF,GAAAI,EAAAC,CAAA,EAAA,KAAA,GAAA,EAAA,SAAA,CAEKN,EAAAE,CACA,CAAA,CAAA,CAGP,8XCdA,SAAAK,EAAAL,EAAA,CACE,OAAAA,GAAA,OAAAA,GAAA,UAAA,SAAAA,GAAAA,EAAA,OAAAM,EAAA,SAAAN,EAAA,MAAA,SAAAA,CAMF,CAUA,MAAAO,EAAAX,GAAA,CAGE,KAAA,CAAM,GAAAC,EAAA,MACU,KAAAW,EACd,SAAAR,EACA,GAAAC,CACG,EAAAL,EAGL,CAAAa,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,EACAC,EAAAN,EAAA,SAAA,QAAAD,EAAAL,CAAA,CAAA,EAEAa,EAAAD,EAAAH,CAAA,EACAK,EAAAF,EAAA,IACGG,GAAA,OAAAA,GAAA,UAAA,UAAAA,GAAA,WAAAA,EAAA,OAAAA,EAAA,MAAA,MAKe,EAAA,OAAAC,GAAA,CAAA,CAAAA,CAAA,EAAA,IAGfA,GAAA,OAAAA,GAAA,SAAAC,EAAAA,IAAAtB,EAAA,CAAA,SAAAqB,CAAA,CAAA,EAAAA,CACgE,EAGnE,OAAAd,EAAA,KACEL,EAAC,CAAA,GAAAI,EACK,UAAAG,EACO,MAAA,CACJ,GAAAH,EAAA,MACQ,GAAAiB,EAAA,CACO,CAAAC,EAAA,QAAA,EAAAX,EAAA,OAAA,SACe,CAAA,CAClC,EACH,SAAA,CAEAS,EAAA,IAAA,KAAA,CAAA,UAAAG,EAAA,SAAAN,EAAA,IAAA,CAAAE,EAAAK,IAAAJ,EAAAA,IAAA,KAAA,CAAA,QAAA,IAAAP,EAAAW,CAAA,EAAA,SAAAL,GAAA,OAAAA,GAAA,UAAA,UAAAA,EAAAM,EAAAA,aAAAN,EAAA,CAAA,OAAAP,IAAAY,EAAA,EAAAL,CAAA,EAAAK,CAAA,CAAA,EAAA,EAQAJ,EAAAA,IAAA,MAAA,CAAA,SAAAJ,CAAA,CAAA,CACgB,CAAA,CAAA,CAGtB,8QCxEA,MAAAU,EAAA3B,GAAA,CAGE,KAAA,CAAA,GAAAC,EAAA,MAAA,OAAAmB,EAAA,GAAAf,CAAA,EAAAL,EAEA,OAAAqB,EAAA,IAAApB,EAAA,CAAA,GAAAI,CAAA,CAAA,CACF"}