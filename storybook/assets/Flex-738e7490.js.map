{"version":3,"file":"Flex-738e7490.js","sources":["../../src/Flex/Flex.tsx"],"sourcesContent":["import type * as CSS from \"csstype\";\nimport { HTMLAttributes } from \"react\";\nimport { root, vars } from \"./Flex.css\";\nimport { assignInlineVars } from \"@vanilla-extract/dynamic\";\nimport cssLength from \"../cssLength\";\n\nexport type FlexProps = HTMLAttributes<HTMLDivElement> & {\n  direction?: CSS.StandardLonghandProperties[\"flexDirection\"];\n  justify?: CSS.StandardLonghandProperties[\"justifyContent\"];\n  align?: CSS.StandardLonghandProperties[\"alignItems\"];\n  gap?: number;\n};\n\nconst Flex = (props: FlexProps) => {\n  const { direction, justify, align, gap, ...divProps } = props;\n\n  return (\n    <div\n      {...divProps}\n      className={root}\n      style={{\n        ...divProps.style,\n        ...assignInlineVars({\n          [vars.flexDirection]: direction ?? \"initial\",\n          [vars.justifyContent]: justify ?? \"initial\",\n          [vars.alignItems]: align ?? \"initial\",\n          [vars.gap]: cssLength(gap ?? \"initial\"),\n        }),\n      }}\n    />\n  );\n};\n\nexport default Flex;\n"],"names":["Flex","props","direction","justify","align","gap","divProps","jsx","root","assignInlineVars","vars","cssLength"],"mappings":"mMAaA,MAAAA,EAAAC,GAAA,CACE,KAAA,CAAA,UAAAC,EAAA,QAAAC,EAAA,MAAAC,EAAA,IAAAC,EAAA,GAAAC,CAAA,EAAAL,EAEA,OAAAM,EAAA,IACE,MAAC,CAAA,GAAAD,EACK,UAAAE,EACO,MAAA,CACJ,GAAAF,EAAA,MACO,GAAAG,EAAA,CACQ,CAAAC,EAAA,aAAA,EAAAR,GAAA,UACiB,CAAAQ,EAAA,cAAA,EAAAP,GAAA,UACD,CAAAO,EAAA,UAAA,EAAAN,GAAA,UACN,CAAAM,EAAA,GAAA,EAAAC,EAAAN,GAAA,SAAA,CACU,CAAA,CACvC,CACH,CAAA,CAGN"}